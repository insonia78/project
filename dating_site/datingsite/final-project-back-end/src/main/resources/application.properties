spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mariadb://localhost:3306/datingSite
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=test
spring.jpa.show-sql=true
server.port=8080
# Graphql
#graphql.servlet.mapping: /apis/graphql
spring.datasource.url= jdbc:mysql://localhost:3306/datingsite?useSSL=false
#spring.datasource.username= root
#spring.datasource.password= test
graphql.tools.schema-location-pattern=**/*.graphqls
spring.main.allow-bean-definition-overriding=true
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.MySQL5InnoDBDialect
graphql.servlet.cors.allowed-origins="*"
#spring.jpa.hibernate.ddl-auto= update
#graphql.servlet.corsEnabled ="false"
# Graphql
#graphql.servlet.mapping: /graphql
#graphql:
#      servlet:
#           mapping: /graphql
#           enabled: true
#           corsEnabled: true
#           cors:
#              allowed-origins: "*"
           # if you want to @ExceptionHandler annotation for custom GraphQLErrors
#           exception-handlers-enabled: true
#           contextSetting: PER_REQUEST_WITH_INSTRUMENTATION

#spring.security.oauth2.client.registration.google.provider=google
#spring.security.oauth2.client.registration.google.client-id=5014057553-8gm9um6vnli3cle5rgigcdjpdrid14m9.apps.googleusercontent.com
#spring.security.oauth2.client.registration.google.client-secret=tWZKVLxaD_ARWsriiiUFYoIk
#spring.security.oauth2.client.registration.google.redirect-uri="{baseUrl}/oauth2/callback/{registrationId}"
#spring.security.oauth2.client.registration.google.scope=email

#spring.security.oauth2.client.registration.facebook.client-id=121189305185277 
#spring.security.oauth2.client.registration.facebook.client-secret=42ffe5aa7379e8326387e0fe16f34132
#spring.security.oauth2.client.registration.facebook.redirect-uri="{baseUrl}/oauth2/callback/{registrationId}"
#spring.security.oauth2.client.registration.facebook.scope="email, public_profile"

