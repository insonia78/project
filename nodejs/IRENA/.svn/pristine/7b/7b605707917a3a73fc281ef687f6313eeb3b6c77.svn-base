var express = require('express');
var router = express.Router();
var mysql = require('mysql');
var https = require('https');
var fs = require('fs');
var archiver = require('archiver');

//var archiver = require('archiver');

const path = require('path');



var APIconfig = require('./config');
var utils = require('./utils');
var saveInputs = require('./save.js');


console.log(APIconfig)

var con = mysql.createConnection({
  host: "localhost",
  user: "alevo",
  password: "alevo4Irena",
  database: "IRENA"
});


var options = {
  hostname: APIconfig.api['hostname'],
  port: APIconfig.api['port'],
  path: '/api/v1',
  method: 'POST',
  headers: {
    'Content-Type': 'application/json',
  },
  ca: fs.readFileSync('/etc/ssl/certs/nginx-selfsigned.crt', 'utf8'),
  rejectUnauthorized: false
}


/* GET home page. */
router.get(
  '/',
  function (req, res, next) {
    res.render(
      'index',
      {
        title: 'Alevo Analytics',
        username: req.query.username
      }
    );
  }
);

/* GET test page. */
router.get(
  '/test',
  function (req, res, next) {
    res.render('test', {
      title: 'Alevo Analytics',

    })
  }
);


/* GET index page. */
router.get(
  '/inputs',
  function (req, res, next) {
    res.render('index', { title: 'Alevo Analytics' });
  }
);


/* GET Data Dictionary Page. */
router.get('/data-dictionary', function (req, res, next) {
  res.render('sub-forms/data-dictionary', { title: 'Express' });
});

/* GET User Guide Page. */
router.get('/user-guide', function (req, res, next) {
  res.render('sub-forms/user-guide', { title: 'User Guide' });
});

/* GET Inputs Page. */
router.get('/index', function (req, res, next) {
  res.render('views/index', { title: 'Inputs' });
});

//save inputs
router.post(
  '/save_slt_input',
  function (req, res) {
    console.log("save_slt_inout");



    saveInputs.es_save_to_db(req, function (err, slt_input) {


      var resBody = { success: 'false' };
      res.setHeader("Content-Type", "application/json");
      if (err) {
        console.log('Error!!!!');
        console.log(err)
        resBody.error = 'server error' + err;
        resBody.success = false;

        res.write(JSON.stringify(resBody));
        res.end();
        return;
      }
      else {
        var inputsObj = JSON.parse(slt_input);
        //console.log(inputsObj);

        console.log("ready to call API");
        var reqAPI = https.request(options, function (resAPI) {
          //console.log('Status: ' + resAPI.statusCode);
          resAPI.setEncoding('utf8');

          resAPI.on('data', function (body) {


            body.success = true;

            //console.log(body)
            if (err) {
              console.log('Error!!!!');
              console.log(err)
              body.error = err;
              body.success = false;
            }

            res.on('error', function (e) { console.log('problem with request1: ' + e.message); });
            res.write(body)
            console.log("save completed");
            //console.log(body)
            res.end();

          });
        });
        reqAPI.on('error', function (e) {
          console.log('problem with request: ' + e.message);
        });
        reqAPI.write(slt_input)
        console.log('Finished calling SLT API');
        reqAPI.end();
      }


    });
  }
);

//start calculation
router.post(
  '/calculate-valuation',
  function (req, res) {
    console.log('Calculate called, body: ' + JSON.stringify(req.body));

    //CALL API
    var reqAPI = https.request(
      options,
      function (resAPI) {
        resAPI.setEncoding('utf8');

        resAPI.on(
          'data',
          function (body) {
            res.setHeader("Content-Type", "application/json");
            res.write(JSON.stringify(body));
            res.end();
          }
        );
      }
    );

    reqAPI.on(
      'error',
      function (e) {
        res.setHeader("Content-Type", "application/json");
        res.write(JSON.stringify(e));
        res.end();
      }
    );

    req.body.action = "CALCULATE";
    reqAPI.write(JSON.stringify(req.body));
    reqAPI.end();
  }
);


//get project and run info this function
router.post('/get-info', function (req, res) {
  console.log(req.body)
  getInfo(req.body, function (err, results) {
    res.setHeader("Content-Type", "application/json");
    if (err) {
      results = {
        error: err,
        success: false
      }
    }
    console.log(results);
    res.write(JSON.stringify(results));
    res.end();
  })
});

//get input profiles
router.post(
  '/get-input-profiles',
  function (req, res) {
    var paths = [
      {
        'path': req.body.path,
        'col': 0
      }];

    utils.readProfiles(paths, function (err, results) {

      res.setHeader("Content-Type", "application/json");
      var body = { status: 'false' };

      if (err) {
        console.log('Some error');

        res.write(JSON.stringify(body));
        res.end();
        return
      }


      body.status = true;
      body.profile = results[0];

      res.write(JSON.stringify(body));
      res.end();

    })

  }
)


//get output profiles
router.post(
  '/get-output-profiles',
  function (req, res) {
    var key = 'Price_year';
    // var reqParsed = JSON.parse(req.body);
    var OutFiles = req.body.paths;
    // console.log(OutFiles);


    var paths = [
      {
        'path': OutFiles['yearly'][req.body.year]['base'][key + '_base'],
        'col': req.body.col
      },
      {
        'path': OutFiles['yearly'][req.body.year]['es'][key],
        'col': req.body.col
      }
    ]

    utils.readProfiles(paths, function (err, results) {

      res.setHeader("Content-Type", "application/json");
      var body = { status: 'false' };

      if (err) {
        console.log('Some error');

        res.write(JSON.stringify(body));
        res.end();
        return
      }
      results[0].shift();
      results[0].map(Date);

      var newArray = results[0].map(function (col, i) {
        return i + ',' + results.map(function (row) {
          return row[i];
        }).toString();
      });

      newArray.unshift("Hour, Base, With Storage");
      body.status = true;
      body.profile = newArray;

      res.write(JSON.stringify(body));
      res.end();

    })


  }
)

//get output gen by fuel type
router.post(
  '/get-output-generation',
  function (req, res) {
    console.log('reading body')

    console.log(req.body);

    var key = 'p_con_year';
    var path_local = [];

    path_local.push({
      'path': req.body.hydro,
      'col': 0
    });

    path_local.push({
      'path': req.body.solar,
      'col': 0
    });

    path_local.push({
      'path': req.body.wind,
      'col': 0
    });


    for (y = 0; y < 10; y++) {
      path_local.push({
        'path': req.body.conventional,
        'col': y
      });
    }



    utils.readProfiles(path_local, function (err, results) {

      res.setHeader("Content-Type", "application/json");
      var body = { status: 'false' };

      if (err) {
        console.log('Some error');

        res.write(JSON.stringify(body));
        res.end();
        return
      }

      var colnames = req.body.colnames;
      var newArray = results.map(function (row, k) {
        return [colnames[k],
        row.reduce(function (sum, value) {
          return sum + Number(value);
        }, 0)
        ]
      });


      newArray[1][1] *= req.body.solarcap;
      newArray[2][1] *= req.body.windcap;

      body.status = true;
      body.generation = newArray;

      res.write(JSON.stringify(body));
      res.end();

    })


  }
)

//get zipped files
router.get('/get-outputs-zip',
  function (req, res) {

    var folderpath = path.join(APIconfig.datafiles.path,
      req.query.username, req.query.project, req.query.run);


    //req.query.path;//'/opt/slt_data/alevo/irena/run_test';



    console.log('getting body of outputs-zip')
    console.log(req.query);
    console.log('path')
    console.log(folderpath);

    res.setHeader('Content-Type', 'application/zip');
    res.set('Content-Disposition', 'attachment; filename=myFile.zip');

    const zipfile = archiver('zip');
    zipfile.on('error', function (err) {
      res.status(500).send({ error: err.message });
    });

    //on stream closed we can end the request
    zipfile.on('end', function () {
      console.log('Archive wrote %d bytes', zipfile.pointer());
    });
    //this is the streaming magic
    zipfile.pipe(res);
    //set the archive name
    res.attachment('Outputs-files.zip');

    zipfile.directory(folderpath, 'SLT-files');
    zipfile.finalize();
  }
)

//save temporary user-defined profiles
router.post(
  '/save_user_profile',
  function (req, res) {
    console.log("save_user_profile");
    //    console.log(req.body);
    if (req.body.userdemandprofile != "") {
      var bob = Math.random().toString(36).substring(7);
      var outfile = "/tmp/" + bob + ".csv";
      console.log(outfile);
      var fs = require('fs');
      fs.writeFile(outfile, req.body.userdemandprofile, function (err) {
        if (err) { return console.log(err); }
        console.log("The file was saved!");
      });
    }
    res.setHeader("Content-Type", "application/json");
    res.write(JSON.stringify({ saved_path: outfile }));
    res.end();
  }
);

//load sample runs
router.post('/get-samples', function (req, res) {
  //
  //console.log(req.body)
  var sampleUser = 'User_Samples_08092017';
  var reqInputs = {
    "action": "RETRIEVE_INPUTS",
    "username": sampleUser,
    "project": "test",
    "run": req.body.run
  };

  var reqOutputs = {
    "action": "RETRIEVE_RESULTS",
    "username": sampleUser,
    "type": "DETAIL",
    "project": "test",
    "run": req.body.run
  };
  var results = {
    success: false
  };

  getInfo(reqInputs, function (err, SLTinputs) {

    if (err) {
      results = {
        error: err,
        success: false
      }
      return;
    }

    results.inputs = JSON.parse(SLTinputs);
    getInfo(reqOutputs, function (err, SLToutputs) {
      if (err) {
        results = {
          error: err,
          success: false
        }
        return;
      }
      results.outputs = JSON.parse(SLToutputs);
      //console.log(results);
      results.success=true;
      res.write(JSON.stringify(results));
      res.end();


    })

  });

})




module.exports = router;

function getInfo(reqBody, callback) {
  console.log('Ready to make POST Request to API, body: ' + JSON.stringify(reqBody));

  //CALL API

  var reqAPI = https.request(options, function (resAPI) {
    console.log('Status: ' + resAPI.statusCode);
    console.log('Headers: ' + JSON.stringify(resAPI.headers));
    resAPI.setEncoding('utf8');
    resAPI.on('data', function (body) {
      callback(undefined, body);

    });
  });
  reqAPI.on('error', function (e) {
    console.log('problem with request: ' + e.message);
    callback(e);
  });
  // write data to request body


  reqAPI.write(JSON.stringify(reqBody));
  reqAPI.end();
  //END OF API CALL
}