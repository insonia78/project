var csv = require("fast-csv");
var fs = require("fs");
var HOURS_PER_YEAR = 8760;

function readCsvFilePromise(req) {
    return function (resolve, reject) {
        console.log('inside readCsvFilePromise')
        //console.log(req.path)

        var filePath = req.path;
        var col = req.col;
               
        var i = 0;
        var dataArray = new Array(HOURS_PER_YEAR);
        try
        {

        if (fs.existsSync(filePath)!="") 
        {
        fs.createReadStream(filePath)
            .on(
            "error",
            function (error) {
                console.log('Error 1:', error.message);
                reject(error);
            })
            .pipe(csv())
            .on(
            "error",
            function (error) {
                console.log('Error 2:', error.message);
                reject(error);
            })
            .on(
            "data",
            function (data) {
                dataArray[i] = data[col];
                ++i;
            }
            ).on(
            "error",
            function (error) {
                console.log('Error 3:', error.message);
                reject(error);
            }
            ).on(
            "end",
            function () {
                resolve(dataArray);
            }
            );            
    
        } //if (fs.existsSync(path)) 
        else{
            reject('File coult not be found!');
        }
            
            
        }
        catch(e)
        {
          reject(e);
        }
        
    }
}


exports.readProfiles = function (jsonRequest, callback) {


    console.log('Inside readProfiles');
    console.log(jsonRequest);
    var profilePromises = jsonRequest.map(function (pathToFile) {
        console.log('inside map');
        console.log(pathToFile)
        return new Promise(readCsvFilePromise(pathToFile));
    });

    Promise.all(profilePromises)
        .then(
        function (results) {

            callback(undefined, results);
            //console.log(results);
        }
        )
        .catch(
        function (err) {
            // Will catch failure of first failed promise
            console.log("Failed:", err);
            callback(err);
        }
        );

}





